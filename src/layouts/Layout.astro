---
import Header from './Header.astro';
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;700&family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
	</head>
	<body>
    <Header />
		<slot />
	</body>
</html>
<script>
const anchor = () => {
  document.querySelectorAll('a[href^="#"]')
    .forEach(anchor => {
      anchor.addEventListener("click", clickAnchor);
    });
  function clickAnchor (e){
    e.preventDefault();
    let id = this.getAttribute('href');
    id = id.slice(1);
    const target = document.getElementById(id);
    if ( target ){
      target.scrollIntoView({
        behavior: 'smooth',
        block: 'start',
      });
    }
  }
}

document.addEventListener('DOMContentLoaded', () => {
  anchor();
});
</script>
<style lang="scss" is:global>
* {
  box-sizing: border-box;
}

:root {
	--Noto-Sans-JP: 'Noto Sans JP', sans-serif;
	--height-header-pc: .6rem;
	--height-header-sp: .50rem;
}
body {
  color: #000;
  font-family: var(--Noto-Sans-JP);
	//font-family: Roboto, Arial, "游ゴシック体", "Yu Gothic", YuGothic, "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", Meiryo, sans-serif;
  letter-spacing: .04em;
  word-wrap : break-word;
  overflow-wrap : break-word;
  -webkit-text-size-adjust: 100%;
     -moz-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
       -o-text-size-adjust: 100%;
          text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background-color: #fff;
  position: relative;
  @include pc {
    font-size: rem(16px);
  }
  @include sp {
    font-size: rem(14px);
  }
}

a {
  color: #000;
  text-decoration: none;
  -webkit-transition: opacity .3s;
          transition: opacity .3s;
}
button {
  padding: 0;
  border: none;
  cursor: pointer;
}
@include pc {
  a:hover {
    opacity: .6;
  }
}

//-----------------------------------
.u-pc {
  @include sp {
    display: none !important;
  }
}
.u-sp {
  @include pc {
    display: none !important;
  }
}
$width-design-pc: 1280; // PC デザイン幅 px
$width-design-sp: 375; // SP デザイン幅 px

.l-container {
  @include pc {
    width: rem(1280px);
    margin: 0 auto;
  }
  @include sp {
    padding: 0 rem(24px);
  }
}

.l-main {
  @include pc {
    width: 100%;
    padding-top: rem(60px);
  }
  @include sp {
    width: 100%;
    padding-top: rem(70px);
  }
}

.c-text-link {
  background: linear-gradient(currentColor, currentColor) 0 100%/0 1px no-repeat;
  transition: background .5s ease;
  will-change: transition;
  line-height: 1.5;
  @media (hover) {
    &:hover {
      background-size: 100% 1px;
    }
    button:hover &,
    a:hover & {
      background-size: 100% 1px;
    }
  }
}
</style>
